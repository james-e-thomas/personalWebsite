g
table(combined$displaySize)
load("C:/Users/james/Documents/Properties/2020.02.18_NW8_W9.RData")
View(data)
g2 <- ggplot(combined, aes(x = price.amount, fill = town)) +
geom_histogram(binwidth = .5, alpha = .5, position = "identity")
g2
g2 <- ggplot(combined, aes(x = price.amount, fill = town)) +
geom_histogram(binwidth = 25000, alpha = .5, position = "identity")
g2
g <- ggplot(combined, aes(x = displaySize, y = price.amount)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(fill = town))
g <- ggplot(combined, aes(x = displaySize, y = price.amount)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(fill = town)) +
scale_color_manual(values = c("blue", "red", "green"))
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_color_manual(values = c("blue", "red", "green"))
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5))
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5)) +
scale_color_manual(values = c("blue", "red", "green"))
g
g2 <- ggplot(combined, aes(x = price.amount, fill = town)) +
geom_histogram(binwidth = 25000, alpha = .5, position = "identity")
g2
g2 <- ggplot(combined, aes(x = price.amount, fill = town)) +
geom_histogram(binwidth = 50000, alpha = .5, position = "identity")
g2
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(range = c(0, 1.5),
breaks = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5)) +
scale_color_manual(values = c("blue", "red", "green"))
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(range = c(0, 1.5)
breaks = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5)) +
scale_color_manual(values = c("blue", "red", "green"))
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(limits = c(0, 1.5),
breaks = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5)) +
scale_color_manual(values = c("blue", "red", "green"))
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(limits = c(0, 1.5),
breaks = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5))
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(limits = c(0, 1.5),
breaks = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5)) +
theme_minimal()
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(name = "Price (in millions £)"
limits = c(0, 1.5),
breaks = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5)) +
theme_minimal()
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(name = "Price (in millions £)",
limits = c(0, 1.5),
breaks = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5)) +
theme_minimal()
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(name = "Price (in millions £)",
limits = c(0, 1.5),
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4)) +
theme_minimal()
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_y_continuous(name = "Price (in millions £)",
limits = c(0, 1.6),
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6)) +
theme_minimal()
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_x_continuous(name = "Square metres")
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_x_continuous(name = "Square metres") +
scale_y_continuous(name = "Price in millions (£)",
limits = c(0, 1.6),
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6)) +
theme_minimal()
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_x_continuous(name = "Square metres") +
scale_y_continuous(name = "Price in millions (£)",
limits = c(0, 1.6),
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6)) +
theme_minimal() +
theme(legend.title = element_blank())
g
g2 <- ggplot(combined, aes(x = price.amount, fill = town)) +
geom_histogram(binwidth = 50000, alpha = .5, position = "identity")
g2
g2 <- ggplot(combined, aes(x = price.amount, fill = town)) +
geom_histogram(binwidth = 50000, alpha = .5, position = "identity") +
theme_minimal() +
theme(legend.title = element_blank())
g2
g2 <- ggplot(combined, aes(x = price.amount / 1000000, fill = town)) +
geom_histogram(binwidth = 50000, alpha = .5, position = "identity") +
scale_x_continuous(name = "Price in millions (£)") +
scale_y_continuous(name = "Count",
limits = c(0, 30),
breaks = c(0, 5, 10, 15, 20, 25, 30)) +
theme_minimal() +
theme(legend.title = element_blank())
g2
g2 <- ggplot(combined, aes(x = price.amount / 1000000, fill = town)) +
geom_histogram(binwidth = 0.05, alpha = .5, position = "identity") +
scale_x_continuous(name = "Price in millions (£)") +
scale_y_continuous(name = "Count",
limits = c(0, 30),
breaks = c(0, 5, 10, 15, 20, 25, 30)) +
theme_minimal() +
theme(legend.title = element_blank())
g2
g2 <- ggplot(combined, aes(x = price.amount / 1000000, fill = town)) +
geom_histogram(binwidth = 0.05, alpha = .5, position = "identity") +
scale_x_continuous(name = "Price in millions (£)",
limits = c(0, 3),
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8, 2.0, 2.2, 2.4, 2.6, 2.8, 3)) +
scale_y_continuous(name = "Count",
limits = c(0, 30),
breaks = c(0, 5, 10, 15, 20, 25, 30)) +
theme_minimal() +
theme(legend.title = element_blank())
g2
g2 <- ggplot(combined, aes(x = price.amount / 1000000, fill = town)) +
geom_histogram(binwidth = 0.05, alpha = .5, position = "identity") +
scale_x_continuous(name = "Price in millions (£)",
limits = c(0, 3),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.0, 2.4, 2.8)) +
scale_y_continuous(name = "Count",
limits = c(0, 30),
breaks = c(0, 5, 10, 15, 20, 25, 30)) +
theme_minimal() +
theme(legend.title = element_blank())
g2
rm(list = ls())
library(RJSONIO)
library(rvest)
library(xml2)
library(V8)
library(dplyr)
library(osrm)
library(origindest)
library(RStata)
library(foreign)
library(haven)
library(tidyr)
library(lubridate)
page_n <- seq(0, 480, 24)
ids <- data.frame()
data <- list()
# revisit this
for (i in page_n) {
#html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=OUTCODE%5E1864&insId=1&radius=0.0&minPrice=&maxPrice=1000000&index=", i, "&minBedrooms=&maxBedrooms=&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
#html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=STATION%5E8627&insId=1&radius=0.5&minPrice=&maxPrice=&index=", i, "&minBedrooms=2&maxBedrooms=3&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
#html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=STATION%5E506&insId=1&radius=0.5&minPrice=&maxPrice=&index=", i, "&minBedrooms=2&maxBedrooms=3&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=STATION%5E8486&insId=1&radius=0.5&minPrice=&maxPrice=&index=", i, "&minBedrooms=2&maxBedrooms=3&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
ids <- html %>%
html_nodes("div") %>%
html_attr("id") %>%
grep("property-", ., value = TRUE)
ids <- gsub("property-", "", ids)
ids <- ids[ids != "0"]
ids <- paste(ids, sep = ",", collapse = ",")
data_on_page <- fromJSON(paste0("https://www.rightmove.co.uk/api/_searchByIds?channel=BUY&propertyIds=", ids, "&viewType=MAP"))
data <- append(data, data_on_page)
# ids <- append(ids, ids_on_page)
if(length(which(ids=="property-0")) == 25) {
break
}
}
data <- lapply(data, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
data <- data.frame(do.call("rbind", data))
data <- unique(data)
data$datetime <- now()
data$date <- today()
View(data)
data$displaySize <- as.numeric(gsub(" sq. ft.", "", data$displaySize))
data$sw18 <- 1
data <- mutate_at(data,
c("bedrooms",
"bathrooms",
"numberOfImages",
"numberOfFloorplans",
"numberOfVirtualTours",
"location.latitude",
"location.longitude",
"price.amount",
"customer.branchId",
"displaySize"),
as.numeric)
save(data, file = "C:\\Users\\james\\Documents\\Properties\\2020.02.28_southfields.RData")
View(data)
rm(list = ls())
library(RJSONIO)
library(rvest)
library(xml2)
library(V8)
library(dplyr)
library(osrm)
library(origindest)
library(RStata)
library(foreign)
library(haven)
library(tidyr)
library(lubridate)
page_n <- seq(0, 480, 24)
ids <- data.frame()
data <- list()
# revisit this
for (i in page_n) {
#html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=OUTCODE%5E1864&insId=1&radius=0.0&minPrice=&maxPrice=1000000&index=", i, "&minBedrooms=&maxBedrooms=&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
#html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=STATION%5E8627&insId=1&radius=0.5&minPrice=&maxPrice=&index=", i, "&minBedrooms=2&maxBedrooms=3&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=STATION%5E506&insId=1&radius=0.5&minPrice=&maxPrice=&index=", i, "&minBedrooms=2&maxBedrooms=3&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
#html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=STATION%5E8486&insId=1&radius=0.5&minPrice=&maxPrice=&index=", i, "&minBedrooms=2&maxBedrooms=3&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
ids <- html %>%
html_nodes("div") %>%
html_attr("id") %>%
grep("property-", ., value = TRUE)
ids <- gsub("property-", "", ids)
ids <- ids[ids != "0"]
ids <- paste(ids, sep = ",", collapse = ",")
data_on_page <- fromJSON(paste0("https://www.rightmove.co.uk/api/_searchByIds?channel=BUY&propertyIds=", ids, "&viewType=MAP"))
data <- append(data, data_on_page)
# ids <- append(ids, ids_on_page)
if(length(which(ids=="property-0")) == 25) {
break
}
}
data <- lapply(data, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
data <- data.frame(do.call("rbind", data))
data <- unique(data)
data$datetime <- now()
data$date <- today()
data$displaySize <- as.numeric(gsub(" sq. ft.", "", data$displaySize))
data$sw12 <- 1
data <- mutate_at(data,
c("bedrooms",
"bathrooms",
"numberOfImages",
"numberOfFloorplans",
"numberOfVirtualTours",
"location.latitude",
"location.longitude",
"price.amount",
"customer.branchId",
"displaySize"),
as.numeric)
save(data, file = "C:\\Users\\james\\Documents\\Properties\\2020.02.28_balham.RData")
rm(list = ls())
library(RJSONIO)
library(rvest)
library(xml2)
library(V8)
library(dplyr)
library(osrm)
library(origindest)
library(RStata)
library(foreign)
library(haven)
library(tidyr)
library(lubridate)
page_n <- seq(0, 480, 24)
ids <- data.frame()
data <- list()
# revisit this
for (i in page_n) {
#html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=OUTCODE%5E1864&insId=1&radius=0.0&minPrice=&maxPrice=1000000&index=", i, "&minBedrooms=&maxBedrooms=&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=STATION%5E8627&insId=1&radius=0.5&minPrice=&maxPrice=&index=", i, "&minBedrooms=2&maxBedrooms=3&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
#html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=STATION%5E506&insId=1&radius=0.5&minPrice=&maxPrice=&index=", i, "&minBedrooms=2&maxBedrooms=3&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
#html <- read_html(paste0("https://www.rightmove.co.uk/property-for-sale/find.html?searchType=SALE&locationIdentifier=STATION%5E8486&insId=1&radius=0.5&minPrice=&maxPrice=&index=", i, "&minBedrooms=2&maxBedrooms=3&displayPropertyType=&maxDaysSinceAdded=&_includeSSTC=on&sortByPriceDescending=&primaryDisplayPropertyType=&secondaryDisplayPropertyType=&oldDisplayPropertyType=&oldPrimaryDisplayPropertyType=&newHome=&auction=false"))
ids <- html %>%
html_nodes("div") %>%
html_attr("id") %>%
grep("property-", ., value = TRUE)
ids <- gsub("property-", "", ids)
ids <- ids[ids != "0"]
ids <- paste(ids, sep = ",", collapse = ",")
data_on_page <- fromJSON(paste0("https://www.rightmove.co.uk/api/_searchByIds?channel=BUY&propertyIds=", ids, "&viewType=MAP"))
data <- append(data, data_on_page)
# ids <- append(ids, ids_on_page)
if(length(which(ids=="property-0")) == 25) {
break
}
}
data <- lapply(data, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
data <- data.frame(do.call("rbind", data))
data <- unique(data)
data$datetime <- now()
data$date <- today()
data$displaySize <- as.numeric(gsub(" sq. ft.", "", data$displaySize))
data$nw8 <- 1
data <- mutate_at(data,
c("bedrooms",
"bathrooms",
"numberOfImages",
"numberOfFloorplans",
"numberOfVirtualTours",
"location.latitude",
"location.longitude",
"price.amount",
"customer.branchId",
"displaySize"),
as.numeric)
save(data, file = "C:\\Users\\james\\Documents\\Properties\\2020.02.28_stjohnswood.RData")
rm(list = ls())
library(dplyr)
library(ggplot2)
load(file = "C:\\Users\\james\\Documents\\Properties\\2020.02.28_stjohnswood.RData")
data$town <- "St Johns Wood"
stjohnswood <- data
load(file = "C:\\Users\\james\\Documents\\Properties\\2020.02.28_balham.RData")
data$town <- "Balham"
balham <- data
load(file = "C:\\Users\\james\\Documents\\Properties\\2020.02.28_southfields.RData")
data$town <- "Southfields"
southfields <- data
rm(data)
combined <- bind_rows(stjohnswood, balham, southfields)
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_x_continuous(name = "Square metres") +
# scale_y_continuous(name = "Price in millions (£)",
#                    limits = c(0, 1.6),
#                    breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6)) +
theme_minimal() +
theme(legend.title = element_blank())
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_x_continuous(name = "Square metres") +
scale_y_continuous(name = "Price in millions (£)",
limits = c(0, 2.4),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.0, 2.4)) +
theme_minimal() +
theme(legend.title = element_blank())
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town, shape = bedrooms)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_x_continuous(name = "Square metres") +
scale_y_continuous(name = "Price in millions (£)",
limits = c(0, 2.4),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.0, 2.4)) +
theme_minimal() +
theme(legend.title = element_blank())
g
combined <- mutate_at(combined,
c("bedrooms",
"bathrooms"),
as.factor)
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town, shape = bedrooms)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_x_continuous(name = "Square metres") +
scale_y_continuous(name = "Price in millions (£)",
limits = c(0, 2.4),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.0, 2.4)) +
theme_minimal() +
theme(legend.title = element_blank())
g
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town, shape = bedrooms)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_x_continuous(name = "Square metres") +
scale_y_continuous(name = "Price in millions (£)",
limits = c(0, 2),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.)) +
theme_minimal() +
theme(legend.title = element_blank())
g
g2 <- ggplot(combined, aes(x = price.amount / 1000000, fill = town)) +
geom_histogram(binwidth = 0.05, alpha = .5, position = "identity") +
scale_x_continuous(name = "Price in millions (£)",
limits = c(0, 2),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.0)) +
scale_y_continuous(name = "Count",
limits = c(0, 30),
breaks = c(0, 5, 10, 15, 20, 25, 30)) +
theme_minimal() +
theme(legend.title = element_blank())
g2
g2 <- ggplot(combined, aes(x = price.amount / 1000000, fill = town)) +
geom_histogram(binwidth = 0.05, alpha = .5, position = "identity") +
# scale_x_continuous(name = "Price in millions (£)",
#                    limits = c(0, 2),
#                    breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.0)) +
# scale_y_continuous(name = "Count",
#                    limits = c(0, 30),
#                    breaks = c(0, 5, 10, 15, 20, 25, 30)) +
theme_minimal() +
theme(legend.title = element_blank())
g2
g2 <- ggplot(combined, aes(x = price.amount / 1000000, fill = town)) +
geom_histogram(binwidth = 0.05, alpha = .5, position = "identity") +
scale_x_continuous(name = "Price in millions (£)",
limits = c(0, 2),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.0)) +
scale_y_continuous(name = "Count",
limits = c(0, 30),
breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
theme_minimal() +
theme(legend.title = element_blank())
g2
g2 <- ggplot(combined, aes(x = price.amount / 1000000, fill = town)) +
geom_histogram(binwidth = 0.05, alpha = .5, position = "identity") +
scale_x_continuous(name = "Price in millions (£)",
limits = c(0, 2),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.0)) +
scale_y_continuous(name = "Count",
limits = c(0, 35),
breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
theme_minimal() +
theme(legend.title = element_blank())
g2
g2 <- ggplot(combined, aes(x = price.amount / 1000000, fill = town)) +
geom_histogram(binwidth = 0.05, alpha = .5, position = "identity") +
scale_x_continuous(name = "Price in millions (£)",
limits = c(0, 2),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.0)) +
scale_y_continuous(name = "Count",
limits = c(0, 35),
breaks = c(0, 5, 10, 15, 20, 25, 30)) +
theme_minimal() +
theme(legend.title = element_blank())
g2
g2 <- ggplot(combined, aes(x = price.amount / 1000000, fill = town)) +
geom_histogram(binwidth = 0.05, alpha = .5, position = "identity") +
scale_x_continuous(name = "Price in millions (£)",
limits = c(0, 2),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.0)) +
scale_y_continuous(name = "Count",
limits = c(0, 30),
breaks = c(0, 5, 10, 15, 20, 25, 30)) +
theme_minimal() +
theme(legend.title = element_blank())
g2
g
ggsave("house_prices.png", g)
ggsave("C:\\Users\\james\\Documents\\Properties\\house_prices.png", g)
g <- ggplot(combined, aes(x = displaySize, y = price.amount / 1000000)) +
geom_point(aes(colour = town, shape = bedrooms)) +
geom_smooth(method = "lm", alpha = .15, aes(colour = town, fill = town)) +
scale_x_continuous(name = "Square feet") +
scale_y_continuous(name = "Price in millions (£)",
limits = c(0, 2),
breaks = c(0, 0.4, 0.8, 1.2, 1.6, 2.)) +
theme_minimal() +
theme(legend.title = element_blank())
g
ggsave("C:\\Users\\james\\Documents\\Properties\\house_prices.png", g)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::build_site()
setwd("C:\\Users\\james\\Documents\\jamesthomas")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
